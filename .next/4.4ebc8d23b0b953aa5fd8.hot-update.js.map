{"version":3,"file":"4.4ebc8d23b0b953aa5fd8.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport metaStellar from '../ethereum/metaStellar.js';\nimport web3 from '../ethereum/web3.js';\nimport {BigNumber} from 'bignumber.js';\nimport {Layout, Astro, Constellation} from '../components/index';\nimport sampleAstros from '../static/data/star_seed.json';\nimport VirtualSky from '../components/VirtualSky';\nimport Alert from 'react-s-alert';\n\nclass MetaStellarIndex extends Component {\n  static async getInitialProps() {\n    const astros = await metaStellar.methods.lastId().call()\n        .then(async (res) => {\n          const minimumPrice = await metaStellar.methods.minimumPrice().call();\n          const starIDs = Array.from(Array(parseInt(res))).map((e,i)=>i+1);\n\n          return await Promise.all(starIDs.map(async (id) => {\n            const rawAstro = await metaStellar.methods.getAstro(id).call();\n            const lastBid = await new BigNumber(parseInt(rawAstro.lastBid));\n            const minBidTic = await new BigNumber(parseInt(minimumPrice));\n            const currentBid = await lastBid.plus(minBidTic);\n\n            return {\n              id: parseInt(rawAstro.id),\n              target: {name: rawAstro.name},\n              ra: {decimal: rawAstro.raDecimal / 1000},\n              dec: {decimal: rawAstro.decDecimal / 1000},\n              metaID: {\n                name: rawAstro.metaIDName,\n                owner: rawAstro.metaIDOwner,\n                sns: rawAstro.metaIDSns\n              },\n              lastBid: lastBid,\n              minBidTic: minBidTic,\n              currentBid: currentBid\n            }\n          }));\n        });\n\n    const ranking_hashes = {};\n    astros.forEach(function(astro) { \n      var x = astro.metaID.owner;\n      ranking_hashes[x] = (ranking_hashes[x] || 0)+1; \n    });\n    const rankers = Object.keys(ranking_hashes).sort(function(a,b){return ranking_hashes[b]-ranking_hashes[a]})\n    return {\n      astros: astros,\n      rankers: rankers\n    };\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      currentUser: null\n    }\n  }\n\n  componentDidMount() {\n    if (!(typeof window !== 'undefined' && typeof window.web3 !== 'undefined')) {\n      Alert.info('<h4>Metamask not available.</h4><ul><li><a href=\"https://metamask.io/\" target=\"_blank\">Get Metamask now.</a></li></ul>', {\n        position: 'top-right',\n        effect: 'slide',\n        html: true,\n        timeout: 5000\n      });\n    } else {\n      web3.eth.net.getNetworkType()\n          .then((network) => {\n            if (network !== 'ropsten') {\n              Alert.info('<h4>You are not in a ropsten network.</h4><ul><li><a href=\"https://metamask.io/\" target=\"_blank\">Open Metamask and change your network to ropsten.</a></li></ul>', {\n                position: 'top-right',\n                effect: 'slide',\n                html: true,\n                timeout: 5000\n              });\n            }\n          });\n    }\n  }\n\n  render() {\n    return(\n        <Layout fluid>\n          <VirtualSky astros={this.props.astros} rankers={this.props.rankers} />\n          <Alert stack={{limit: 3}} />\n        </Layout>\n    )\n  }\n}\n\nexport default MetaStellarIndex;\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAZA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;;AADA;AA4BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AACA;;;;;;;;;;;;;;;AAKA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;AAhFA;AACA;AAkFA;AAAA;;;;;;;;;;;;AAnFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}