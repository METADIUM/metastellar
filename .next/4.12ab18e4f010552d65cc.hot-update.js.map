{"version":3,"file":"4.12ab18e4f010552d65cc.hot-update.js","sources":["webpack:///components/Astro.js","webpack:///components/AstroList.js","webpack:///components/VirtualSky.js","webpack:///components/index.js","webpack:///pages/index.js"],"sourcesContent":["import React, {Component} from 'react';\nimport web3 from '../ethereum/web3'\nimport {Modal, Button, Icon, Header, Form, Card, Grid, Input, Message} from 'semantic-ui-react';\nimport {MetaID} from \"./index\";\n\nconst Astro = ({astro, modalOpen, handleClose, upBid, downBid, onPressBuy, formLoading, message, messageUrl}) => {\n  return (\n      <Modal\n          open={modalOpen}\n          onClose={handleClose}\n          basic size='small'\n      >\n        <Header icon='id badge' content='Become an owner of this star.'/>\n        <Modal.Content>\n          <Grid stackable>\n            <Grid.Row>\n              <Grid.Column width={8}>\n                <p>\n                  {`Do you like star #${astro.target.name} ?`}<br/>\n                  {`Buy now and put your identity on constellation using MetaID.`} <a href='https://metadium.com'\n                                                                                      target=\"_blank\">(What is\n                  MetaID?)</a><br/>\n                  {`You can put your name on it.`}\n                </p>\n                <MetaID\n                    metaID={astro.metaID}\n                    starImage={`http://server7.sky-map.org/imgcut?survey=DSS2&w=128&h=128&ra=${astro.ra.decimal}&de=${astro.dec.decimal}&angle=1.25&output=PNG`}\n                    starUrl={`http://server1.wikisky.org/v2?ra=\"+(${astro.ra.decimal}/15)+\"&de=\"+(${astro.dec.decimal})+\"&zoom=6&img_source=DSS2`}\n                    starPrice={web3.utils.fromWei(astro.lastBid, 'ether')}\n                />\n              </Grid.Column>\n              <Grid.Column width={8}>\n                <Card style={styles.formContainer}>\n                  <Card.Content>\n                    <Form loading={formLoading}>\n                      <Form.Field required>\n                        <label>Name</label>\n                        <Input ref={(ref) => this.name = ref} placeholder='astro' />\n                      </Form.Field>\n                      <Form.Field required>\n                        <label>Social</label>\n                        <Input ref={(ref) => this.sns = ref} type='url' placeholder='facebook.com' />\n                      </Form.Field>\n                    </Form>\n                    {message ?\n                    <Message color='green'><a href={messageUrl} target={'_blank'}>{message}</a> </Message>\n                    : null}\n                    <Message color='yellow'>\n                      {`Minimum Price : ${web3.utils.fromWei(astro.currentBid, 'ether')} ETH`}<br/><br/>\n                      {`Anyone who pays ${web3.utils.fromWei(astro.minBidTic, 'ether')} ETH more than your bid price will be able to purchase this star from you without permission. (You will get your bidded ether back anyway)`}\n                      </Message>\n                  </Card.Content>\n                  <Card.Content extra>\n                    <Input ref={(ref) => this.input = ref} defaultValue={web3.utils.fromWei(astro.currentBid, 'ether')}\n                           type='number' min={`${web3.utils.fromWei(astro.currentBid, 'ether')}`}\n                           step='0.01' placeholder='Your Bid' action\n                    >\n                      <input />\n                      <Button color='green' onClick={() => onPressBuy(this.input.inputRef.value, this.name.inputRef.value, this.sns.inputRef.value)} inverted>\n                        {`ETH`}\n                      </Button>\n                    </Input>\n                  </Card.Content>\n                </Card>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Modal.Content>\n      </Modal>\n  )\n};\n\nconst styles = {\n  formContainer: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n  }\n};\n\nexport {Astro};\n\n\n// WEBPACK FOOTER //\n// components/Astro.js","import React from 'react';\nimport {Card, Image, Icon, Grid, Segment} from 'semantic-ui-react';\nimport {AstroCard} from './index.js';\n\n\nconst AstroList = (props) => {\n    \n  return (\n      <Grid stackable columns={6} style={{marginTop: '20px'}}>\n          {props.astros.map((astro) => {\n              return (\n                <Grid.Column key={astro.id}>\n                    <Segment>\n                        <AstroCard\n                            astro={astro}\n                            starImage={`http://server7.sky-map.org/imgcut?survey=DSS2&w=128&h=128&ra=${astro.ra.decimal}&de=${astro.dec.decimal}&angle=1.25&output=PNG`}\n                            starUrl={`http://server1.wikisky.org/v2?ra=\"+(${astro.ra.decimal}/15)+\"&de=\"+(${astro.dec.decimal})+\"&zoom=6&img_source=DSS2`}\n                            starPrice={astro.lastBid}\n                        />\n                    </Segment>\n                </Grid.Column>\n              );\n        })}\n      </Grid>\n  )\n};\n\nexport {AstroList};\n\n\n// WEBPACK FOOTER //\n// components/AstroList.js","import React, {Component} from 'react';\nimport metaStellar from '../ethereum/metaStellar.js';\nimport web3 from '../ethereum/web3';\nimport { BigNumber } from 'bignumber.js'\nimport {Astro, RankingList} from './index.js';\nimport {Dropdown, Header} from 'semantic-ui-react';\nimport LayoutHeader from './Header';\nimport searchBase from '../static/data/ko/search_base.json';\nimport virtualskyInitializer from '../static/data/initializer.json';\nimport Alert from 'react-s-alert';\n\nexport default class VirtualSky extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      name: '/',\n      modalOpen: false,\n      currentAstro: {\n        target: {name: 'Astro'}, ra: {decimal: 0}, dec: {decimal: 0}, currentBid: '0', minBidTic: '0', lastBid: '0'\n      },\n      currentMetaID: {\n        name: '이한결', joined: '2018년 5월 부터 소유중', about: '코인플러그 개발자', image: 'https://apod.nasa.gov/apod/image/9612/sagan_uc.gif'\n      },\n      formattedSearchBase: [],\n      formLoading: false,\n      message: null,\n      messageUrl: null\n    }\n  }\n\n  componentDidMount() {\n    this.vs = $.virtualsky({\n      id: 'starmap',\n      lang: 'ko',\n      objects: this.props.astros,\n      ...virtualskyInitializer,\n      onClickObject: (o) => this.openAstroModal(o),\n    });\n    const fsb = searchBase.map((star) => {\n      return {\n        key: star.target.name, value: star, text: star.target.name,\n        content: <Header className={'ui header text search-result-bar'} icon={`${star.type==='star'?'empty ':''}star`}\n                         content={star.target.name} subheader={star.type_locale} />\n      }\n    });\n    this.setState({formattedSearchBase: fsb});\n  }\n\n  async checkNetwork() {\n    let network = true;\n    if (!(typeof window !== 'undefined' && typeof window.web3 !== 'undefined')) {\n      Alert.info('<h4>Metamask not available.</h4><ul><li><a href=\"https://metamask.io/\" target=\"_blank\">Get Metamask now.</a></li></ul>', {\n        position: 'top-right',\n        effect: 'slide',\n        html: true,\n        timeout: 5000\n      });\n      network = false;\n    } else {\n      await web3.eth.net.getNetworkType()\n          .then((network) => {\n            if (network !== 'ropsten') {\n              Alert.info('<h4>You are not in a ropsten network.</h4><ul><li><a href=\"https://metamask.io/\" target=\"_blank\">Open Metamask and change your network to ropsten.</a></li></ul>', {\n                position: 'top-right',\n                effect: 'slide',\n                html: true,\n                timeout: 5000\n              });\n            }\n          });\n      network =false\n    }\n    return network;\n  }\n\n  invalidForm(name, sns) {\n    let invalid = false;\n    if (name === '' || sns === '') {\n      Alert.info(`<h4>${name === ''?'Name field ':''} ${sns === ''?'SNS field ':''}not given.</h4>`, {\n        position: 'top-right',\n        effect: 'slide',\n        html: true,\n        timeout: 5000\n      });\n      invalid = true;\n    }\n    return invalid;\n  }\n\n  async onPressBuy(bid, name, sns) {\n    if (await this.checkNetwork() || this.invalidForm(name, sns)) {\n      return false;\n    }\n    const { id } = this.state.currentAstro;\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({formLoading: true}, async () => {\n      await metaStellar.methods.buyAstro(id, name, sns).send({from: accounts[0], value: web3.utils.toWei(bid, 'ether'), gasPrice: '1'})\n          .on('transactionHash', (hash) => {\n            this.setState({ message: `Tx Made. (click for etherscan)`, messageUrl: `https://ropsten.etherscan.io/tx/${hash}`, formLoading: false })\n          }).on('confirmation', (confirmationNumber, receipt) => {\n            this.setState({ message: `Transaction Confirmed. (blk:${confirmationNumber})`, messageUrl: `https://ropsten.etherscan.io/tx/${hash}`, formLoading: false })\n          }).on('error', (error) => {\n            Alert.info(`<h4>${error.message}</h4><ul><li><a href=\"https://ethgasstation.info\" target=\"_blank\">ETH gas station</a></li></ul>`, {\n              position: 'top-right',\n              effect: 'slide',\n              html: true,\n              timeout: 5000\n            });\n            this.setState({ formLoading: false});\n          });\n    });\n  };\n\n  moveTo(star) {\n    var self=this;\n    setTimeout(function(){\n      self.vs.panTo(star.ra.decimal, star.dec.decimal, 500);\n    }, 10);\n  };\n\n  openAstroModal(object) {\n    this.setState({currentAstro: object, message: null, messageUrl: null}, () => {\n      this.handleOpen()\n    })\n  };\n\n  handleOpen() {this.setState({ modalOpen: true })};\n  handleClose() {this.setState({ modalOpen: false })};\n  upBid() {this.setState({currentAstro: {...this.state.currentAstro, currentBid: this.state.currentAstro.currentBid + 0.1} })};\n  downBid() {this.setState({currentAstro: {...this.state.currentAstro, currentBid: this.state.currentAstro.currentBid - 0.1} })};\n\n  render() {\n    return (\n        <div>\n          <LayoutHeader>\n            <Dropdown\n                placeholder='Search Star by name.'\n                fluid selection search\n                options={this.state.formattedSearchBase}\n                onChange={(e, { value }) => this.moveTo(value)}\n            />\n            <RankingList rankers={this.props.rankers} />\n          </LayoutHeader>\n          <div id={\"starmap\"} style={styles.container}></div>\n          <Astro\n              astro={this.state.currentAstro}\n              message={this.state.message}\n              messageUrl={this.state.messageUrl}\n              modalOpen={this.state.modalOpen}\n              handleClose={() => this.handleClose()}\n              upBid={() => this.upBid()}\n              downBid={() => this.downBid()}\n              formLoading={this.state.formLoading}\n              onPressBuy={(bid, name, sns) => this.onPressBuy(bid, name, sns)}\n          />\n        </div>\n    );\n  }\n\n}\n\nconst styles = {\n  container: {\n    height: '100vh',\n    width: '100%'\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// components/VirtualSky.js","export * from './Astro';\nexport * from './Constellation';\nexport * from './Layout';\nexport * from './Astro';\nexport * from './MetaID';\nexport * from './AstroList';\nexport * from './Header';\nexport * from './RankingList';\nexport * from './AstroCard';\n\n\n\n// WEBPACK FOOTER //\n// components/index.js","import React, { Component } from 'react';\nimport metaStellar from '../ethereum/metaStellar.js';\nimport web3 from '../ethereum/web3.js';\nimport {BigNumber} from 'bignumber.js';\nimport {Layout, Astro, Constellation} from '../components/index';\nimport sampleAstros from '../static/data/star_seed.json';\nimport VirtualSky from '../components/VirtualSky';\nimport Alert from 'react-s-alert';\n\nclass MetaStellarIndex extends Component {\n  static async getInitialProps() {\n    const astros = await metaStellar.methods.lastId().call()\n        .then(async (res) => {\n          const minimumPrice = await metaStellar.methods.minimumPrice().call();\n          const starIDs = Array.from(Array(parseInt(res))).map((e,i)=>i+1);\n\n          return await Promise.all(starIDs.map(async (id) => {\n            const rawAstro = await metaStellar.methods.getAstro(id).call();\n            const lastBid = await new BigNumber(parseInt(rawAstro.lastBid));\n            const minBidTic = await new BigNumber(parseInt(minimumPrice));\n            const currentBid = await lastBid.plus(minBidTic);\n\n            return {\n              id: parseInt(rawAstro.id),\n              target: {name: rawAstro.name},\n              ra: {decimal: rawAstro.raDecimal / 1000},\n              dec: {decimal: rawAstro.decDecimal / 1000},\n              metaID: {\n                name: rawAstro.metaIDName,\n                owner: rawAstro.metaIDOwner,\n                sns: rawAstro.metaIDSns\n              },\n              lastBid: lastBid,\n              minBidTic: minBidTic,\n              currentBid: currentBid\n            }\n          }));\n        });\n\n    const ranking_hashes = {};\n    astros.forEach(function(astro) { \n      var x = astro.metaID.owner;\n      ranking_hashes[x] = (ranking_hashes[x] || 0)+1; \n    });\n    const rankers = Object.keys(ranking_hashes).sort(function(a,b){return ranking_hashes[b]-ranking_hashes[a]})\n    return {\n      astros: astros,\n      rankers: rankers\n    };\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      currentUser: null\n    }\n  }\n\n  componentDidMount() {\n    if (!(typeof window !== 'undefined' && typeof window.web3 !== 'undefined')) {\n      Alert.info('<h4>Metamask not available.</h4><ul><li><a href=\"https://metamask.io/\" target=\"_blank\">Get Metamask now.</a></li></ul>', {\n        position: 'top-right',\n        effect: 'slide',\n        html: true,\n        timeout: 5000\n      });\n    } else {\n      web3.eth.net.getNetworkType()\n          .then((network) => {\n            if (network !== 'ropsten') {\n              Alert.info('<h4>You are not in a ropsten network.</h4><ul><li><a href=\"https://metamask.io/\" target=\"_blank\">Open Metamask and change your network to ropsten.</a></li></ul>', {\n                position: 'top-right',\n                effect: 'slide',\n                html: true,\n                timeout: 5000\n              });\n            }\n          });\n    }\n    console.log(this.props.ranking);\n  }\n\n  render() {\n    return(\n        <Layout fluid>\n          <VirtualSky astros={this.props.astros} rankers={this.props.rankers} />\n          <Alert stack={{limit: 3}} />\n        </Layout>\n    )\n  }\n}\n\nexport default MetaStellarIndex;\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":"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","sourceRoot":""}