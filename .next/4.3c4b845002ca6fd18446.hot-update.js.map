{"version":3,"file":"4.3c4b845002ca6fd18446.hot-update.js","sources":["webpack:///pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport metaStellar from '../ethereum/metaStellar.js';\nimport {Layout, Astro, Constellation} from '../components/index';\nimport sampleAstros from '../constellation.json';\nimport VirtualSky from '../components/VirtualSky';\n\nclass MetaStellarIndex extends Component {\n  static async getInitialProps() {\n    const lastID = await metaStellar.methods.lastId().call();\n    return { lastId };\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      astros: [],\n      mapShow: true,\n      loading: false\n    }\n  }\n\n  componentDidMount() {\n    const starIndexes = Array.from(Array(this.props.lastId)).map((e,i)=>i+1)\n    this.renderAstros(starIndexes)\n        .then(() => this.setState({ loading: false }));\n  }\n\n  async renderAstros(idxs) {\n    const astroPromises = idxs.map(async id => {\n      const astro = await metaStellar.methods.getAstro(id).call();\n      return astro;\n    });\n\n    const textPromises = urls.map(async url => {\n      const response = await fetch(url);\n      return response.text();\n    });\n\n    // log them in sequence\n    for (const textPromise of textPromises) {\n      console.log(await textPromise);\n    }\n  }\n\n  testClick() {\n    this.setState({\n      mapShow: !this.state.mapShow\n    })\n  }\n\n  render() {\n    return(\n        <Layout>\n          <VirtualSky astros={this.state.astros} mapShow={this.state.mapShow} />\n        </Layout>\n    )\n  }\n}\n\nexport default MetaStellarIndex;\n\n\n\n// WEBPACK FOOTER //\n// pages/index.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;AAEA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;AAKA;AACA;;;;;;;AADA;AACA;;AAAA;AACA;;;;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;AAlDA;AACA;AAoDA;AAAA;;;;;;;;;;;;AArDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}